#!/bin/bash
#
# This is a rather minimal example Argbash potential
# Example taken from http://argbash.readthedocs.io/en/stable/example.html
#
# ARG_OPTIONAL_SINGLE([component-path],[p],[path to component dir])
# ARG_HELP([Installation script])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.4.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='ph'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_component_path=

print_help ()
{
	echo "Installation script"
	printf 'Usage: %s [-p|--component-path <arg>] [-h|--help]\n' "$0"
	printf "\t%s\n" "-p,--component-path: path to component dir (no default)"
	printf "\t%s\n" "-h,--help: Prints help"
}

# THE PARSING ITSELF
while test $# -gt 0
do
	_key="$1"
	case "$_key" in
		-p*|--component-path|--component-path=*)
			_val_from_long="${_key##--component-path=}"
			_val_from_short="${_key##-p}"
			if test "$_val_from_long" != "$_key"
			then
				_val="$_val_from_long"
			elif test "$_val_from_short" != "$_key" -a -n "$_val_from_short"
			then
				_val="$_val_from_short"
			else
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_val="$2"
				shift
			fi
			_arg_component_path="$_val"
			;;
		-h*|--help)
			print_help
			exit 0
			;;
		*)
			_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
			;;
	esac
	shift
done

### END OF CODE GENERATED BY Argbash 

COMPONENT_DIR=$_arg_component_path

/usr/bin/rsync -a --exclude *.jinja $COMPONENT_DIR/files/ $INFRASTRUCTURE_REPO/default/vpc/
jinja2 $COMPONENT_DIR/files/terraform.tfvars.jinja $INFRASTRUCTURE_REPO/config/local/vars.yml > $INFRASTRUCTURE_REPO/default/vpc/terraform.tfvars
jinja2 $COMPONENT_DIR/files/main.tf.jinja $INFRASTRUCTURE_REPO/config/local/vars.yml > $INFRASTRUCTURE_REPO/default/vpc/main.tf
